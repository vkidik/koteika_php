"use strict";
!(function () {
  var t = document.querySelector(".filter");
  if (t) {
    var e = t.querySelector(".filter__toggle"),
      o = t.querySelector(".filter__btn-close"),
      r = t.querySelector("#from"),
      n = t.querySelector("#up-to"),
      a = t.querySelector(".filter__hint"),
      i = t.querySelector(".filter__overlay"),
      l = document.querySelector("body");
    if (e && o && i && l) {
      var s = function () {
          t.classList.contains("filter--show") &&
            (t.classList.remove("filter--show"),
            l.classList.remove("noscroll"),
            l.classList.remove("blur-catalog"),
            o.removeEventListener("click", c),
            i.removeEventListener("click", d),
            document.removeEventListener("keydown", u));
        },
        c = function (e) {
          e.preventDefault(), s();
        },
        d = function (e) {
          e.target === i && (e.preventDefault(), s());
        },
        u = function (e) {
          27 === e.keyCode && s();
        },
        m = function () {
          parseInt(r.value, 10) <= parseInt(n.value, 10)
            ? (a.style.display = "none")
            : (a.style.display = "block");
        };
      e.addEventListener("click", function (e) {
        e.preventDefault(),
          t.classList.contains("filter--show") ||
            (t.classList.add("filter--show"),
            l.classList.add("noscroll"),
            l.classList.add("blur-catalog")),
          o.addEventListener("click", c),
          i.addEventListener("click", d),
          document.addEventListener("keydown", u);
      }),
        r.addEventListener("change", m),
        n.addEventListener("change", m);
    }
  }
})(),
  (function () {
    var t = document.querySelector(".header");
    if (t) {
      var o = t.querySelector(".header__toggle"),
        e = t.querySelectorAll(".nav__link"),
        r = document.querySelector("body");
      o &&
        r &&
        (t.classList.remove("header--nojs"),
        o.addEventListener("click", function () {
          t.classList.contains("header--closed")
            ? (t.classList.remove("header--closed"),
              t.classList.add("header--opened"),
              r.classList.add("noscroll"),
              o.setAttribute("aria-label", "Закрыть меню"))
            : (t.classList.add("header--closed"),
              t.classList.remove("header--opened"),
              r.classList.remove("noscroll"),
              o.setAttribute("aria-label", "Открыть меню"));
        }),
        e.length &&
          Array.from(e).forEach(function (e) {
            e.addEventListener("click", function () {
              t.classList.contains("header--opened") &&
                (t.classList.remove("header--opened"),
                r.classList.remove("noscroll"),
                t.classList.add("header--closed"),
                o.setAttribute("aria-label", "Открыть меню"));
            });
          }));
    }
  })(),
  (function () {
    var e = document.querySelector(".reviews__list-container"),
      t = document.querySelector(".reviews__list");
    e && t && (e.style.height = t.offsetHeight + "px");
  })(),
  (function () {
    function t(e) {
      e.preventDefault(),
        f.classList.add("overlay--show"),
        y.classList.remove("modal--hide"),
        y.classList.add("modal--show"),
        g && g.addEventListener("click", n),
        f.addEventListener("click", o),
        s.addEventListener("keydown", r),
        c.classList.add("noscroll"),
        l();
    }
    var o = function (e) {
        e.target === f && (a(), i(), l());
      },
      r = function (e) {
        27 === e.keyCode && (a(), i(), l());
      },
      n = function (e) {
        e.preventDefault(), a(), l();
      },
      e = function (e) {
        e.preventDefault(), i(), l();
      },
      a = function () {
        f.classList.remove("overlay--show"),
          y.classList.add("modal--hide"),
          y.classList.remove("modal--show"),
          c.classList.remove("noscroll");
      },
      i = function () {
        f.classList.remove("overlay--show"),
          L.classList.add("modal--hide"),
          L.classList.remove("modal--show"),
          c.classList.remove("noscroll");
      },
      l = function () {
        d.classList.toggle("blur"),
          u.classList.toggle("blur"),
          m.classList.toggle("blur");
      },
      s = document.documentElement,
      c = document.querySelector("body"),
      d = document.querySelector("main"),
      u = document.querySelector("header"),
      m = document.querySelector("footer"),
      v = document.querySelectorAll(".book-button"),
      f = document.querySelector(".overlay"),
      y = document.querySelector(".modal--book"),
      L = document.querySelector(".modal--accept"),
      g = document.querySelector("#form-close-x"),
      h = document.querySelector("#accept-close"),
      p = document.querySelector("#accept-close-x"),
      _ = document.querySelector("#name"),
      S = document.querySelector("#pet-name"),
      w = document.querySelector("#email"),
      q = document.querySelector("#arrival"),
      b = document.querySelector("#departure"),
      k = document.querySelector('input[type="tel"]'),
      E = document.querySelector("#book"),
      I = {
        name: "",
        petName: "",
        tel: "",
        email: "",
        arrival: "",
        departure: "",
      },
      A = !0;
    try {
      I = localStorage;
    } catch (e) {
      A = !1;
    }
    if (k) IMask(k, { mask: "+{7} (000) 000-00-00" });
    E &&
      E.addEventListener("submit", function () {
        _ &&
          S &&
          k &&
          w &&
          q &&
          b &&
          A &&
          (localStorage.setItem("name", _.value),
          localStorage.setItem("petName", S.value),
          localStorage.setItem("tel", k.value),
          localStorage.setItem("email", w.value),
          localStorage.setItem("arrival", q.value),
          localStorage.setItem("departure", b.value)),
          a(),
          f.classList.add("overlay--show"),
          L.classList.remove("modal--hide"),
          L.classList.add("modal--show"),
          h.addEventListener("click", e),
          p.addEventListener("click", e);
      }),
      0 < v.length &&
        f &&
        y &&
        v.forEach(function (e) {
          e.addEventListener("click", t);
        }),
      _ &&
        S &&
        k &&
        w &&
        q &&
        b &&
        (void 0 === I.name ? (_.value = "") : (_.value = I.name),
        void 0 === I.petName ? (S.value = "") : (S.value = I.petName),
        void 0 === I.tel ? (k.value = "") : (k.value = I.tel),
        void 0 === I.email ? (w.value = "") : (w.value = I.email),
        void 0 === I.arrival ? (q.value = "") : (q.value = I.arrival),
        void 0 === I.departure ? (b.value = "") : (b.value = I.departure));
  })(),
  (function () {
    var e = document.querySelectorAll(".offer__hint");
    if (e.length && document.querySelector(".offer__hint")) {
      var t = function () {
        window.matchMedia("(min-width: 1024px)").matches
          ? Array.from(e).forEach(function (e) {
              !(function (e) {
                var t = e.parentNode,
                  o = e.previousElementSibling;
                if (t && o) {
                  var r = o.offsetLeft;
                  t.offsetWidth / 2 <= r
                    ? e.classList.contains("offer__hint--two-line") &&
                      e.classList.remove("offer__hint--two-line")
                    : e.classList.contains("offer__hint--two-line") ||
                      e.classList.add("offer__hint--two-line");
                }
              })(e);
            })
          : Array.from(e).forEach(function (e) {
              (e.style.right = ""), (e.style.left = ""), (e.style.top = "");
            });
      };
      t(), window.addEventListener("resize", t);
    }
  })(),
  (function () {
    var e = document.querySelector(".reviews__list-container"),
      t = document.querySelector(".reviews__list");
    if (document.querySelector(".reviews__list")) {
      new Swiper(".reviews__list-container", {
        init: !0,
        loop: !0,
        speed: 400,
        spaceBetween: 20,
        slidesPerView: 1,
        navigation: {
          nextEl: ".slider-controls__review-button-next",
          prevEl: ".slider-controls__review-button-prev",
        },
        a11y: !0,
        keyboardControl: !0,
        grabCursor: !0,
        pagination: { el: ".dots--review", type: "bullets" },
        breakpoints: {
          768: { slidesPerView: 2, spaceBetween: 30 },
          1024: { slidesPerView: 3, spaceBetween: 30 },
        },
      });
      e && t && (e.style.height = t.offsetHeight + "px");
    }
  })(),
  (function () {
    if (document.querySelector(".rooms__list"))
      new Swiper(".rooms__slider-container", {
        init: !0,
        loop: !0,
        speed: 400,
        spaceBetween: 128,
        slidesPerView: 1,
        navigation: {
          nextEl: ".slider-controls__button--next",
          prevEl: ".slider-controls__button--prev",
        },
        a11y: !0,
        keyboardControl: !0,
        grabCursor: !0,
        pagination: { el: ".dots--room", type: "bullets" },
      });
  })(),
  (function () {
    var e = document.querySelectorAll(".nav__link");
    e.length &&
      Array.from(e).forEach(function (e) {
        !(function (e) {
          var t = e.href,
            o = t.indexOf("#");
          if (-1 !== o)
            var r = t.slice(o),
              n = document.querySelector(r);
          n &&
            e.addEventListener("click", function (e) {
              e.preventDefault(),
                console.log(n),
                n.scrollIntoView({ block: "start", behavior: "smooth" });
            });
        })(e);
      });
  })(),
  (function () {
    var r = document.querySelector(".sorting");
    if (r) {
      var e = r.querySelector(".sorting__toggle"),
        t = r.querySelectorAll(".sorting__link"),
        n = r.querySelector(".sorting__item--current");
      if (e && n && t.length) {
        var a = function () {
            r.classList.add("sorting--show"),
              (e.ariaLabel = "Cкрыть варианты сортировки");
          },
          i = function () {
            r.classList.remove("sorting--show"),
              (e.ariaLabel = "Показать варианты сортировки");
          };
        e.addEventListener("click", function () {
          (r.classList.contains("sorting--show") ? i : a)();
        }),
          Array.from(t).forEach(function (o) {
            o.addEventListener("click", function (e) {
              /*e.preventDefault()*/
              var t = o.parentNode;
              t !== n
                ? (t.classList.add("sorting__item--current"),
                  n.classList.remove("sorting__item--current"),
                  (n = t),
                  i())
                : (r.classList.contains("sorting--show") ? i : a)();
            });
          });
      }
    }
  })(),
  (function () {
    var t,
      o = [59.938631, 30.323055],
      r = [59.938631, 30.323055],
      n = document.querySelector("#map");
    ymaps.ready(function () {
      var e = new ymaps.Map(n, { center: o, zoom: 16 });
      e.behaviors.disable("scrollZoom"),
        (t = new ymaps.Placemark(
          r,
          {},
          {
            iconLayout: "default#image",
            iconImageHref: "img/icon-pin.svg",
            iconImageSize: [62, 88],
            iconImageOffset: [-30, -60],
          }
        )),
        e.geoObjects.add(t),
        t &&
          (window.matchMedia("(min-width: 768px)").matches
            ? t.options.set({
                iconLayout: "default#image",
                iconImageHref: "img/icon-pin.svg",
                iconImageSize: [62, 88],
                iconImageOffset: [-30, -60],
              })
            : t.options.set({
                iconLayout: "default#image",
                iconImageHref: "img/icon-pin.svg",
                iconImageSize: [52, 76],
                iconImageOffset: [-30, -50],
              }));
    });
  })();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
